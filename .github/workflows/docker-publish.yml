name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: ["main"]      # Exécute le workflow lors d'un push sur la branche "main"
    tags: ['v*.*.*']        # Publie des releases sur des tags de version
  pull_request:
    branches: ["main"]      # Exécute le workflow lors d'une pull request sur "main"

env:
  REGISTRY: ghcr.io                        # Utilise GitHub Container Registry
  IMAGE_NAME: adri6400/bigdata  

jobs:
  build:
    runs-on: ubuntu-latest                  # Exécute le job sur une machine virtuelle Ubuntu
    permissions:
      contents: read                        # Permet de lire le contenu du dépôt
      packages: write                       # Permet d'écrire dans le registre de packages
      id-token: write                       # Permet d'écrire un token d'identité

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4           # Étape pour cloner le dépôt

      # Installe l'outil cosign, sauf pour les PR
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Configure BuildKit pour construire des images Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Connexion au registre Docker, sauf pour les PR
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extraction des métadonnées pour Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Construire et pousser l'image Docker
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}  # Ne pousse pas sur les PR
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Signer l'image Docker, sauf pour les PR
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
    